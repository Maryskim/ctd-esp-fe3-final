{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marys\\\\OneDrive\\\\Desktop\\\\ctd-esp-fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext } from \"react\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getFavsFromStorage = () => {\n  const localData = localStorage.getItem(\"favs\");\n  return localData ? JSON.parse(localData) : [];\n};\n\nconst saveFavsFromStorage = fav => {\n  localStorage.setItem(\"favs\", JSON.stringify(fav));\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"add_fav\":\n      saveFavsFromStorage([...state, action.payload]);\n      return [...state, action.payload];\n\n    default:\n      return;\n  }\n};\n\nexport const initialState = {\n  theme: \"\",\n  data: []\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(undefined);\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  const [state, dispatch] = useReducer(reducer, {}, getFavsFromStorage);\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"cWhFvhBAKWiR6XMCy5AZ9aLPKPg=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useReducer","getFavsFromStorage","localData","localStorage","getItem","JSON","parse","saveFavsFromStorage","fav","setItem","stringify","reducer","state","action","type","payload","initialState","theme","data","ContextGlobal","undefined","ContextProvider","children","dispatch"],"sources":["C:/Users/marys/OneDrive/Desktop/ctd-esp-fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext } from \"react\";\r\nimport { useReducer } from \"react\";\r\n\r\n\r\nconst getFavsFromStorage = () => {\r\n  const localData = localStorage.getItem(\"favs\");\r\n  return localData ? JSON.parse(localData) : [];\r\n};\r\n\r\nconst saveFavsFromStorage = (fav) => {\r\n  localStorage.setItem(\"favs\", JSON.stringify(fav));\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"add_fav\":\r\n      saveFavsFromStorage([...state, action.payload]);\r\n      return [...state, action.payload];\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\nexport const initialState = {theme: \"\", data: []}\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n  const [state, dispatch] = useReducer(reducer, {}, getFavsFromStorage);\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{state , dispatch}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,UAAT,QAA2B,OAA3B;;;AAGA,MAAMC,kBAAkB,GAAG,MAAM;EAC/B,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAlB;EACA,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAH,GAA2B,EAA3C;AACD,CAHD;;AAKA,MAAMK,mBAAmB,GAAIC,GAAD,IAAS;EACnCL,YAAY,CAACM,OAAb,CAAqB,MAArB,EAA6BJ,IAAI,CAACK,SAAL,CAAeF,GAAf,CAA7B;AACD,CAFD;;AAIA,MAAMG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACjC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,SAAL;MACEP,mBAAmB,CAAC,CAAC,GAAGK,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAD,CAAnB;MACA,OAAO,CAAC,GAAGH,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;IACF;MACE;EALJ;AAOD,CARD;;AAUA,OAAO,MAAMC,YAAY,GAAG;EAACC,KAAK,EAAE,EAAR;EAAYC,IAAI,EAAE;AAAlB,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGpB,aAAa,CAACqB,SAAD,CAAnC;AAEP,OAAO,MAAMC,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAC/C;EACA,MAAM,CAACV,KAAD,EAAQW,QAAR,IAAoBvB,UAAU,CAACW,OAAD,EAAU,EAAV,EAAcV,kBAAd,CAApC;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACW,KAAD;MAASW;IAAT,CAA/B;IAAA,UACGD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CATM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}